"use strict";!function e(t,n,i){function r(a,l){if(!n[a]){if(!t[a]){var c="function"==typeof require&&require;if(!l&&c)return c(a,!0);if(o)return o(a,!0);throw new Error("Cannot find module '"+a+"'")}var s=n[a]={exports:{}};t[a][0].call(s.exports,function(e){var n=t[a][1][e];return r(n?n:e)},s,s.exports,e,t,n,i)}return n[a].exports}for(var o="function"==typeof require&&require,a=0;a<i.length;a++)r(i[a]);return r}({1:[function(e,t,n){!function(){function t(){var e=new XMLHttpRequest,t=void 0;e.onreadystatechange=function(){if(4==e.readyState&&200==e.status){try{t=JSON.parse(e.response)}catch(e){alert("Invalid Server response. Sorry!")}l=new a(t)}},e.open("GET","data/image_posts.json"),e.send()}function n(e,t){var n=1e3*parseFloat(window.getComputedStyle(t).transitionDuration);"in"==e?(t.style.display="block",t.style.opacity=0,setTimeout(function(){t.style.opacity=1},4)):(t.style.opacity=0,setTimeout(function(){t.style.display="none"},n))}function i(e,t){var n=e.className.split(" ");return n.indexOf(t)>-1}function r(e,t){var n=e.className.split(" "),i=n.indexOf(t);i>-1&&n.splice(i,1),e.className=n.join(" ")}function o(e,t){i(e,t)||(e.className+=" "+t)}var a=(e("./modules/scrollbar.es6.js"),e("./modules/image-collection.es6.js")),l={};t(),document.addEventListener("DOMContentLoaded",function(){function e(e){var t=a.nicknameNode,n=a.commentNode,i=e.target,r=a.button;i.value&&(i.style.borderColor=""),i.value||(r.style.cursor=""),t.value&&n.value&&(r.style.cursor="pointer")}var t=function(){var e=document.querySelector(".popup.orientation-chose");return function(t){var i=t.target.files[0],r=/^image\//,o=void 0;if(i){if(!r.test(i.type))return void alert("You must upload an image!");o=new FileReader,o.onload=function(t){var i=e.querySelectorAll("img");[].forEach.call(i,function(e){e.src=t.target.result}),n("in",e)},o.readAsDataURL(i)}}}();document.querySelector('input[type="file"]').addEventListener("change",t);var a=document.querySelector(".popup-comments");a.nicknameNode=document.getElementById("nickname"),a.commentNode=document.getElementById("comment"),a.nicknameLabel=document.querySelector('[for="nickname"]'),a.commentLabel=document.querySelector('[for="comment"]'),a.placeholders={nickname:a.nicknameLabel.getAttribute("data-placeholder"),comment:a.commentLabel.getAttribute("data-placeholder")},a.button=document.querySelector(".send-button");var c=function(){var e=a.placeholders;return function(t){var n=t.target;if("INPUT"===n.tagName){var i=n.nextElementSibling;n.value?(n.style.borderColor="",i.setAttribute("data-placeholder","")):(n.style.borderColor="red",i.style.color="red",i.setAttribute("data-placeholder",e[n.id]))}}}();a.addEventListener("blur",c,!0),a.addEventListener("input",e);var s=function(){function e(e){var t=+e.getAttribute("data-id"),i=l.getImagePost(t);m.style.backgroundImage="url("+i.imgBig+")",p.setAttribute("data-count",i.likes),f.setAttribute("data-count",i.dislikes),g.textContent=i.comments.length,i.showComments(u.querySelector(".comments")),n("in",u),u.currentId=t}function t(e,t){l.addImagePost({imgBig:e,orientation:t}),n("out",v)}function c(e){if("I"===e.tagName&&(e=e.parentNode),!i(e,"clicked")){var t=u.querySelector(".image-button.clicked"),n=i(e,"like");t&&(r(t,"clicked"),l.evaluate(u.currentId,!n,!1,t)),o(e,"clicked"),l.evaluate(u.currentId,n,!0,e)}}function s(){!a.nicknameNode.value||!a.commentNode.value}function d(){var e=u.querySelector(".clicked");e&&r(e,"clicked");var t=a.nicknameNode,n=a.commentNode,i=a.placeholders.nickname,o=a.placeholders.comment,l=a.nicknameLabel,c=a.commentLabel;t.value=n.value="",t.style.borderColor=n.style.borderColor="",l.style.color=c.style.color="",a.button.style.cursor="",l.setAttribute("data-placeholder",i),c.setAttribute("data-placeholder",o)}var u=document.querySelector(".popup.big-img"),m=u.querySelector(".image-big"),p=u.querySelector(".sprite-like"),f=u.querySelector(".sprite-dislike"),g=u.querySelector("h2 span"),v=document.querySelector(".popup.orientation-chose"),h=void 0;return function(r){var o=r.target;"IMG"===o.tagName?e(o):(h=o.getAttribute("data-orientation"))?t(o.firstElementChild.src,h):i(o,"image-button")||i(o.parentNode,"image-button")?c(o):i(o,"sprite-close")?(d(),n("out",u)):(i(o,"send-button")||i(o.parentNode,"send-button"))&&(s(),r.preventDefault())}}();document.body.addEventListener("click",s)})}()},{"./modules/image-collection.es6.js":2,"./modules/scrollbar.es6.js":3}],2:[function(e,t,n){!function(){function n(e){function t(e){for(var t=0,n=0,i=e.length;n<i;n++)t=e[n].id>t?e[n].id:t;return t}for(var n=[],r=t(e),o=0,a=e.length;o<a;o++)n.push(new i(e[o]));this.getImagePost=function(e){for(var t=0,i=n.length;t<i;t++)if(n[t].id===e)return n[t];console.log("No image post with id:",e)},this.addImagePost=function(e){e.id||(e.id=++r);var t=new i(e);n.push(t)}}function i(e){var t=this;this.id=e.id||null,this.imgSmall=e.imgSmall||e.imgBig,this.imgBig=e.imgBig,this.orientation=e.orientation||"normal",this.likes=e.likes||0,this.dislikes=e.dislikes||0,this.comments=[],e.comments&&e.comments.forEach(function(e){t.comments.push(new o(e.text,e.nickname,e.date))}),this.node=r(this)}function r(e){function t(e,t){var n=document.createElement("I");return n.className="sprite "+e,n.setAttribute("data-count",t),n}var n=void 0,i=void 0,r=void 0;switch(n=document.createElement("DIV"),e.orientation){case"landscape":n.className="grid-item grid-item--width";break;case"portrait":n.className="grid-item grid-item--height";break;default:n.className="grid-item"}return i=document.createElement("IMG"),i.src=e.imgSmall,i.alt="Image "+e.id,i.setAttribute("data-id",e.id),n.appendChild(i),r=document.createElement("DIV"),r.className="hover-box",r.appendChild(t("sprite-comment",e.comments.length)),r.appendChild(t("sprite-like",e.likes)),r.appendChild(t("sprite-dislike",e.dislikes)),n.appendChild(r),l.insertBefore(n,l.lastElementChild),c.reloadItems(),c.layout(),s.adjustSize(),n}function o(e,t,n){this.text=e,this.nickname=t,this.date=new Date(n)}var a=e("./scrollbar.es6.js"),l=document.querySelector(".grid"),c=new Packery(l,{itemSelector:".grid-item",gutter:10,horizontal:!0}),s=new a(document.querySelector(".scroll-bar"),"h");s.adjustSize(),n.prototype.evaluate=function(e,t,n,i){var r=this.getImagePost(e),o=document.querySelector('[data-id="'+e+'"]'),a=t?"like":"dislike",l=o.nextElementSibling.querySelector(".sprite-"+a),c=void 0;c=n?++r[a+"s"]:--r[a+"s"],l.setAttribute("data-count",c),i.firstElementChild.setAttribute("data-count",c)},i.prototype.showComments=function(e){e.innerHTML="",this.comments.forEach(function(t){t.putOnPage(e)})},o.prototype.putOnPage=function(e){function t(e,t){var n=document.createElement("SPAN");return n.className=e,n.textContent=t,n}var n=document.createElement("DIV");n.className="comment",n.appendChild(t("nickname",this.nickname)),n.appendChild(t("date",this.date));var i=document.createElement("DIV");i.className="comment-text",i.appendChild(t("",this.text)),n.appendChild(i),e.appendChild(n)},t.exports=n}()},{"./scrollbar.es6.js":3}],3:[function(e,t,n){!function(){t.exports=function(e,t){var n=e.parentNode,i=document.querySelector(n.getAttribute("data-scrolled-area")),r=i.parentNode,o=function(){var e=i.clientWidth,t=r.clientWidth;return e>t?t/e*100+"%":"100%"};this.adjustSize=function(){var t=o();"100%"==t?n.style.opacity=0:(n.style.opacity=1,e.style.width=t)};var a=function(){var t=null,n=parseFloat(window.getComputedStyle(e).marginLeft),i=e.parentNode.clientWidth,o=function e(o){var a=void 0,l=e.currentTarget,c=e.scrollBarSize,s=e.scrollAreaSize;return null===t?void(t=o.clientX):(a=o.clientX-t,t=o.clientX,n+=a,n<=0?(l.style.marginLeft=n=0,void(r.scrollLeft=0)):(c+n>=i&&(n=i-c),l.style.marginLeft=n+"px",void(r.scrollLeft=n/i*s)))},a=function(){window.removeEventListener("mousemove",o),t=null};return window.addEventListener("mouseup",a),window.addEventListener("blur",a),o}();e.addEventListener("mousedown",function(e){a.currentTarget=e.target,"h"==t?(a.scrollBarSize=e.target.clientWidth,a.scrollAreaSize=i.clientWidth):"v"==t&&(a.scrollBarSize=e.target.clientHeight,a.scrollAreaSize=i.clientHeight),window.addEventListener("mousemove",a)})}}()},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
