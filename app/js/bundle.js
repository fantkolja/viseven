"use strict";var _slicedToArray=function(){function e(e,t){var n=[],o=!0,r=!1,i=void 0;try{for(var a,l=e[Symbol.iterator]();!(o=(a=l.next()).done)&&(n.push(a.value),!t||n.length!==t);o=!0);}catch(e){r=!0,i=e}finally{try{!o&&l.return&&l.return()}finally{if(r)throw i}}return n}return function(t,n){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return e(t,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();!function e(t,n,o){function r(a,l){if(!n[a]){if(!t[a]){var c="function"==typeof require&&require;if(!l&&c)return c(a,!0);if(i)return i(a,!0);throw new Error("Cannot find module '"+a+"'")}var s=n[a]={exports:{}};t[a][0].call(s.exports,function(e){var n=t[a][1][e];return r(n?n:e)},s,s.exports,e,t,n,o)}return n[a].exports}for(var i="function"==typeof require&&require,a=0;a<o.length;a++)r(o[a]);return r}({1:[function(e,t,n){!function(){function t(){var e=new XMLHttpRequest,t=void 0;e.onreadystatechange=function(){if(4==e.readyState&&200==e.status){try{t=JSON.parse(e.response)}catch(e){alert("Invalid Server response. Sorry!")}l=new a(t)}},e.open("GET","data/image_posts.json"),e.send()}function n(e,t){var n=1e3*parseFloat(window.getComputedStyle(t).transitionDuration);"in"==e?(t.style.display="block",t.style.opacity=0,setTimeout(function(){t.style.opacity=1},4)):(t.style.opacity=0,setTimeout(function(){t.style.display="none"},n))}function o(e,t){var n=e.className.split(" ");return n.indexOf(t)>-1}function r(e,t){var n=e.className.split(" "),o=n.indexOf(t);o>-1&&n.splice(o,1),e.className=n.join(" ")}function i(e,t){o(e,t)||(e.className+=" "+t)}var a=(e("./modules/scrollbar.es6.js"),e("./modules/image-collection.es6.js")),l={};t(),document.addEventListener("DOMContentLoaded",function(){function e(e){var t=a.nicknameNode,n=a.commentNode,o=e.target,r=a.button;o.value&&(o.style.borderColor=""),o.value||(r.style.cursor=""),t.value&&n.value&&(r.style.cursor="pointer")}var t=function(){var e=document.querySelector(".popup.orientation-chose");return function(t){var o=t.target.files[0],r=/^image\//,i=void 0;if(o){if(!r.test(o.type))return void alert("You must upload an image!");i=new FileReader,i.onload=function(t){var o=e.querySelectorAll("img");[].forEach.call(o,function(e){e.src=t.target.result}),n("in",e)},i.readAsDataURL(o)}}}();document.querySelector('input[type="file"]').addEventListener("change",t);var a=document.querySelector(".popup-comments");a.nicknameNode=document.getElementById("nickname"),a.commentNode=document.getElementById("comment"),a.nicknameLabel=document.querySelector('[for="nickname"]'),a.commentLabel=document.querySelector('[for="comment"]'),a.placeholders={nickname:a.nicknameLabel.getAttribute("data-placeholder"),comment:a.commentLabel.getAttribute("data-placeholder")},a.button=document.querySelector(".send-button"),a.clearInputs=function(){this.nicknameNode.value=this.commentNode.value="",this.nicknameLabel.setAttribute("data-placeholder",this.placeholders.nickname),this.commentLabel.setAttribute("data-placeholder",this.placeholders.comment),this.button.style.cursor="not-allowed"};var c=function(){var e=a.placeholders;return function(t){var n=t.target;if("INPUT"===n.tagName){var o=n.nextElementSibling;n.value?(n.style.borderColor="",o.setAttribute("data-placeholder","")):(n.style.borderColor="red",o.style.color="red",o.setAttribute("data-placeholder",e[n.id]))}}}();a.addEventListener("blur",c,!0),a.addEventListener("input",e);var s=function(){function e(e){var t=+e.getAttribute("data-id"),o=l.getImagePost(t);m.style.backgroundImage="url("+o.imgBig+")",p.setAttribute("data-count",o.likes),v.setAttribute("data-count",o.dislikes),"like"==o.myEvaluation?i(p.parentNode,"clicked"):"dislike"==o.myEvaluation&&i(v.parentNode,"clicked"),n("in",d),o.showComments(t),d.currentId=t}function t(e,t){l.addImagePost({imgBig:e,orientation:t}),n("out",f)}function c(e){if("I"===e.tagName&&(e=e.parentNode),!o(e,"clicked")){var t=d.querySelector(".image-button.clicked"),n=o(e,"like");t&&(r(t,"clicked"),l.evaluate(d.currentId,!n,!1,t)),i(e,"clicked"),l.evaluate(d.currentId,n,!0,e)}}function s(){var e=a.nicknameNode.value,t=a.commentNode.value;if(e&&t){a.nicknameNode.value=a.commentNode.value="",a.clearInputs();var n=new Date;l.addComment(d.currentId,{text:t,nickname:e,date:n})}}function u(){var e=d.querySelector(".clicked");e&&r(e,"clicked");var t=a.nicknameNode,n=a.commentNode,o=a.nicknameLabel,i=a.commentLabel;t.value=n.value="",t.style.borderColor=n.style.borderColor="",o.style.color=i.style.color="",a.button.style.cursor="",a.clearInputs()}var d=document.querySelector(".popup.big-img"),m=d.querySelector(".image-big"),p=d.querySelector(".sprite-like"),v=d.querySelector(".sprite-dislike"),f=(d.querySelector("h2 span"),document.querySelector(".popup.orientation-chose")),h=void 0;return function(r){var i=r.target;"IMG"===i.tagName?e(i):(h=i.getAttribute("data-orientation"))?t(i.firstElementChild.src,h):o(i,"image-button")||o(i.parentNode,"image-button")?c(i):o(i,"sprite-close")||o(i,"big-img")?(u(),n("out",d)):o(i,"orientation-chose")?n("out",i):(o(i,"send-button")||o(i.parentNode,"send-button"))&&(s(),r.preventDefault())}}();document.body.addEventListener("click",s)})}()},{"./modules/image-collection.es6.js":2,"./modules/scrollbar.es6.js":3}],2:[function(e,t,n){!function(){function n(e){function t(e){for(var t=0,n=0,o=e.length;n<o;n++)t=e[n].id>t?e[n].id:t;return t}for(var n=[],r=t(e),i=0,a=e.length;i<a;i++)n.push(new o(e[i]));this.getImagePost=function(e){for(var t=0,o=n.length;t<o;t++)if(n[t].id===e)return n[t];console.log("No image post with id:",e)},this.addImagePost=function(e){e.id||(e.id=++r);var t=new o(e);n.push(t)}}function o(e){var t=this;this.id=e.id||null,this.imgSmall=e.imgSmall||e.imgBig,this.imgBig=e.imgBig,this.orientation=e.orientation||"normal",this.likes=e.likes||0,this.dislikes=e.dislikes||0,this.comments=[],this.myEvaluation=null,e.comments&&e.comments.sort(function(e,t){return t.date-e.date}),e.comments&&e.comments.forEach(function(e){t.comments.push(new i(e.text,e.nickname,e.date))}),this.node=r(this)}function r(e){function t(e,t){var n=document.createElement("I");return n.className="sprite "+e,n.setAttribute("data-count",t),n}var n=void 0,o=void 0,r=void 0;switch(n=document.createElement("DIV"),e.orientation){case"landscape":n.className="grid-item grid-item--width";break;case"portrait":n.className="grid-item grid-item--height";break;default:n.className="grid-item"}return o=document.createElement("IMG"),o.src=e.imgSmall,o.alt="Image "+e.id,o.setAttribute("data-id",e.id),n.appendChild(o),r=document.createElement("DIV"),r.className="hover-box",r.appendChild(t("sprite-comment",e.comments.length)),r.appendChild(t("sprite-like",e.likes)),r.appendChild(t("sprite-dislike",e.dislikes)),n.appendChild(r),c.insertBefore(n,c.lastElementChild),s.reloadItems(),s.layout(),u.adjustSize(),n}function i(e,t,n){this.text=e,this.nickname=t,this.date=a(new Date(n))}function a(e){var t=e.getMinutes();t=t<10?"0"+t:t;var n=e.getHours(),o=n>12?"PM":"AM";n=n>12?n-12:n;var r=864e5,i=void 0,a=void 0,l=void 0,c=void 0,s=new Date;if(a=Math.round((s-e)/r),c=s.getFullYear()-e.getFullYear(),a>365){var u=1==c?" year":" years";i=c+u+" ago"}else if(a>31){l=s.getMonth()-e.getMonth(),c&&(l+=12);var d=1==l?" month":" months";i=l+d+" ago"}else i=a>1?a+" days ago":1==a?"Yesterday":"Today";return i+" "+n+":"+t+" "+o}var l=e("./scrollbar.es6.js"),c=document.querySelector(".grid"),s=new Packery(c,{itemSelector:".grid-item",gutter:10,horizontal:!0}),u=new l(document.querySelector("section + div>.scroll-bar"),"h");u.adjustSize();var d=new l(document.querySelector(".popup.big-img .scroll-bar"),"v");n.prototype.evaluate=function(e,t,n,o){var r=this.getImagePost(e),i=document.querySelector('[data-id="'+e+'"]'),a=t?"like":"dislike",l=i.nextElementSibling.querySelector(".sprite-"+a),c=void 0;r.myEvaluation=a,c=n?++r[a+"s"]:--r[a+"s"],l.setAttribute("data-count",c),o.firstElementChild.setAttribute("data-count",c)},n.prototype.addComment=function(e,t){var n=this.getImagePost(e);n.comments.unshift(new i(t.text,t.nickname,t.date)),n.showComments(e)},o.prototype.showComments=function(){var e=document.querySelector(".comments");return function(t){e.innerHTML="",this.comments.forEach(function(t){t.putOnPage(e)}),d.adjustSize(!0),document.querySelector(".popup-comments h2 span").textContent=this.comments.length,t&&this.node.querySelector(".sprite-comment").setAttribute("data-count",this.comments.length)}}(),i.prototype.putOnPage=function(e){function t(e,t){var n=document.createElement("SPAN");return n.className=e,n.textContent=t,n}var n=document.createElement("DIV");n.className="comment",n.appendChild(t("nickname",this.nickname)),n.appendChild(t("date",this.date));var o=document.createElement("DIV");o.className="comment-text",o.appendChild(t("",this.text)),n.appendChild(o),e.appendChild(n)},t.exports=n}()},{"./scrollbar.es6.js":3}],3:[function(e,t,n){!function(){var e=5;t.exports=function(t,n){var o=this,r="h"==n?["clientWidth","width","marginLeft","clientX","scrollLeft"]:["clientHeight","height","marginTop","clientY","scrollTop"],i=_slicedToArray(r,5),a=i[0],l=i[1],c=i[2],s=i[3],u=i[4],d=t.parentNode,m=document.querySelector(d.getAttribute("data-scrolled-area")),p=m.parentNode,v=t[a],f=d[a],h=m[a],g=function(){var e=p[a];return h=m[a],h>e?e/h*100+"%":"100%"};this.adjustSize=function(e){var n=g();e&&o.scrollAt(0,!0),"100%"==n?(d.style.opacity=0,p.removeEventListener("wheel",y)):(d.style.opacity=1,t.style[l]=n,v=t[a],f=d[a],p.addEventListener("wheel",y))};var y=function(t){o.scrollAt(t.deltaY/e),t.preventDefault()},b=function(){function e(){return i<=0}function n(){return v+i>=f}var r=null,i=parseFloat(window.getComputedStyle(t)[c]);f=t.parentNode[a],o.scrollAt=function(o,r){return r?void(i=t.style[c]=p[u]=0):(i+=o,e()?(t.style[c]=i=0,void(p[u]=0)):(n()&&(i=f-v),t.style[c]=i+"px",void(p[u]=i/f*h)))};var l=function(e){var n=void 0;return f||(f=t.parentNode[a]),null===r?void(r=e[s]):(n=e[s]-r,r=e[s],void o.scrollAt(n))},d=function(){window.removeEventListener("mousemove",l),r=null};return window.addEventListener("mouseup",d),window.addEventListener("blur",d),l}();t.addEventListener("mousedown",function(e){window.addEventListener("mousemove",b)})}}()},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
