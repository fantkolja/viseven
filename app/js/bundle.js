"use strict";var _slicedToArray=function(){function e(e,t){var n=[],r=!0,o=!1,i=void 0;try{for(var a,l=e[Symbol.iterator]();!(r=(a=l.next()).done)&&(n.push(a.value),!t||n.length!==t);r=!0);}catch(e){o=!0,i=e}finally{try{!r&&l.return&&l.return()}finally{if(o)throw i}}return n}return function(t,n){if(Array.isArray(t))return t;if(Symbol.iterator in Object(t))return e(t,n);throw new TypeError("Invalid attempt to destructure non-iterable instance")}}();!function e(t,n,r){function o(a,l){if(!n[a]){if(!t[a]){var c="function"==typeof require&&require;if(!l&&c)return c(a,!0);if(i)return i(a,!0);throw new Error("Cannot find module '"+a+"'")}var s=n[a]={exports:{}};t[a][0].call(s.exports,function(e){var n=t[a][1][e];return o(n?n:e)},s,s.exports,e,t,n,r)}return n[a].exports}for(var i="function"==typeof require&&require,a=0;a<r.length;a++)o(r[a]);return o}({1:[function(e,t,n){!function(){function t(){var e=new XMLHttpRequest,t=void 0;e.onreadystatechange=function(){if(4==e.readyState&&200==e.status){try{t=JSON.parse(e.response)}catch(e){alert("Invalid Server response. Sorry!")}l=new a(t)}},e.open("GET","data/image_posts.json"),e.send()}function n(e,t){var n=1e3*parseFloat(window.getComputedStyle(t).transitionDuration);"in"==e?(t.style.display="block",t.style.opacity=0,setTimeout(function(){t.style.opacity=1},4)):(t.style.opacity=0,setTimeout(function(){t.style.display="none"},n))}function r(e,t){var n=e.className.split(" ");return n.indexOf(t)>-1}function o(e,t){var n=e.className.split(" "),r=n.indexOf(t);r>-1&&n.splice(r,1),e.className=n.join(" ")}function i(e,t){r(e,t)||(e.className+=" "+t)}var a=(e("./modules/scrollbar.es6.js"),e("./modules/image-collection.es6.js")),l={};t(),document.addEventListener("DOMContentLoaded",function(){function e(e){var t=a.nicknameNode,n=a.commentNode,r=e.target,o=a.button;r.value&&(r.style.borderColor=""),r.value||(o.style.cursor=""),t.value&&n.value&&(o.style.cursor="pointer")}var t=function(){var e=document.querySelector(".popup.orientation-chose");return function(t){var r=t.target.files[0],o=/^image\//,i=void 0;if(r){if(!o.test(r.type))return void alert("You must upload an image!");i=new FileReader,i.onload=function(t){var r=e.querySelectorAll("img");[].forEach.call(r,function(e){e.src=t.target.result}),n("in",e)},i.readAsDataURL(r)}}}();document.querySelector('input[type="file"]').addEventListener("change",t);var a=document.querySelector(".popup-comments");a.nicknameNode=document.getElementById("nickname"),a.commentNode=document.getElementById("comment"),a.nicknameLabel=document.querySelector('[for="nickname"]'),a.commentLabel=document.querySelector('[for="comment"]'),a.placeholders={nickname:a.nicknameLabel.getAttribute("data-placeholder"),comment:a.commentLabel.getAttribute("data-placeholder")},a.button=document.querySelector(".send-button"),a.clearInputs=function(){this.nicknameNode.value=this.commentNode.value="",this.nicknameLabel.setAttribute("data-placeholder",this.placeholders.nickname),this.commentLabel.setAttribute("data-placeholder",this.placeholders.comment),this.button.style.cursor="not-allowed"};var c=function(){var e=a.placeholders;return function(t){var n=t.target;if("INPUT"===n.tagName){var r=n.nextElementSibling;n.value?(n.style.borderColor="",r.setAttribute("data-placeholder","")):(n.style.borderColor="red",r.style.color="red",r.setAttribute("data-placeholder",e[n.id]))}}}();a.addEventListener("blur",c,!0),a.addEventListener("input",e);var s=function(){function e(e){var t=+e.getAttribute("data-id"),r=l.getImagePost(t);m.style.backgroundImage="url("+r.imgBig+")",p.setAttribute("data-count",r.likes),v.setAttribute("data-count",r.dislikes),"like"==r.myEvaluation?i(p.parentNode,"clicked"):"dislike"==r.myEvaluation&&i(v.parentNode,"clicked"),n("in",d),r.showComments(t),d.currentId=t}function t(e,t){l.addImagePost({imgBig:e,orientation:t}),n("out",f)}function c(e){if("I"===e.tagName&&(e=e.parentNode),!r(e,"clicked")){var t=d.querySelector(".image-button.clicked"),n=r(e,"like");t&&(o(t,"clicked"),l.evaluate(d.currentId,!n,!1,t)),i(e,"clicked"),l.evaluate(d.currentId,n,!0,e)}}function s(){var e=a.nicknameNode.value,t=a.commentNode.value;if(e&&t){a.nicknameNode.value=a.commentNode.value="",a.clearInputs();var n=new Date;l.addComment(d.currentId,{text:t,nickname:e,date:n})}}function u(){var e=d.querySelector(".clicked");e&&o(e,"clicked");var t=a.nicknameNode,n=a.commentNode,r=a.nicknameLabel,i=a.commentLabel;t.value=n.value="",t.style.borderColor=n.style.borderColor="",r.style.color=i.style.color="",a.button.style.cursor="",a.clearInputs()}var d=document.querySelector(".popup.big-img"),m=d.querySelector(".image-big"),p=d.querySelector(".sprite-like"),v=d.querySelector(".sprite-dislike"),f=(d.querySelector("h2 span"),document.querySelector(".popup.orientation-chose")),h=void 0;return function(o){var i=o.target;"IMG"===i.tagName?e(i):(h=i.getAttribute("data-orientation"))?t(i.firstElementChild.src,h):r(i,"image-button")||r(i.parentNode,"image-button")?c(i):r(i,"sprite-close")?(u(),n("out",d)):(r(i,"send-button")||r(i.parentNode,"send-button"))&&(s(),o.preventDefault())}}();document.body.addEventListener("click",s)})}()},{"./modules/image-collection.es6.js":2,"./modules/scrollbar.es6.js":3}],2:[function(e,t,n){!function(){function n(e){function t(e){for(var t=0,n=0,r=e.length;n<r;n++)t=e[n].id>t?e[n].id:t;return t}for(var n=[],o=t(e),i=0,a=e.length;i<a;i++)n.push(new r(e[i]));this.getImagePost=function(e){for(var t=0,r=n.length;t<r;t++)if(n[t].id===e)return n[t];console.log("No image post with id:",e)},this.addImagePost=function(e){e.id||(e.id=++o);var t=new r(e);n.push(t)}}function r(e){var t=this;this.id=e.id||null,this.imgSmall=e.imgSmall||e.imgBig,this.imgBig=e.imgBig,this.orientation=e.orientation||"normal",this.likes=e.likes||0,this.dislikes=e.dislikes||0,this.comments=[],this.myEvaluation=null,e.comments&&e.comments.sort(function(e,t){return t.date-e.date}),e.comments&&e.comments.forEach(function(e){t.comments.push(new i(e.text,e.nickname,e.date))}),this.node=o(this)}function o(e){function t(e,t){var n=document.createElement("I");return n.className="sprite "+e,n.setAttribute("data-count",t),n}var n=void 0,r=void 0,o=void 0;switch(n=document.createElement("DIV"),e.orientation){case"landscape":n.className="grid-item grid-item--width";break;case"portrait":n.className="grid-item grid-item--height";break;default:n.className="grid-item"}return r=document.createElement("IMG"),r.src=e.imgSmall,r.alt="Image "+e.id,r.setAttribute("data-id",e.id),n.appendChild(r),o=document.createElement("DIV"),o.className="hover-box",o.appendChild(t("sprite-comment",e.comments.length)),o.appendChild(t("sprite-like",e.likes)),o.appendChild(t("sprite-dislike",e.dislikes)),n.appendChild(o),c.insertBefore(n,c.lastElementChild),s.reloadItems(),s.layout(),u.adjustSize(),n}function i(e,t,n){this.text=e,this.nickname=t,this.date=a(new Date(n))}function a(e){var t=e.getMinutes();t=t<10?"0"+t:t;var n=e.getHours(),r=n>12?"PM":"AM";n=n>12?n-12:n;var o=864e5,i=void 0,a=void 0,l=void 0,c=void 0,s=new Date;if(a=Math.round((s-e)/o),c=s.getFullYear()-e.getFullYear(),a>365){var u=1==c?" year":" years";i=c+u+" ago"}else if(a>31){l=s.getMonth()-e.getMonth(),c&&(l+=12);var d=1==l?" month":" months";i=l+d+" ago"}else i=a>1?a+" days ago":1==a?"Yesterday":"Today";return i+" "+n+":"+t+" "+r}var l=e("./scrollbar.es6.js"),c=document.querySelector(".grid"),s=new Packery(c,{itemSelector:".grid-item",gutter:10,horizontal:!0}),u=new l(document.querySelector("section + div>.scroll-bar"),"h");u.adjustSize();var d=new l(document.querySelector(".popup.big-img .scroll-bar"),"v");n.prototype.evaluate=function(e,t,n,r){var o=this.getImagePost(e),i=document.querySelector('[data-id="'+e+'"]'),a=t?"like":"dislike",l=i.nextElementSibling.querySelector(".sprite-"+a),c=void 0;o.myEvaluation=a,c=n?++o[a+"s"]:--o[a+"s"],l.setAttribute("data-count",c),r.firstElementChild.setAttribute("data-count",c)},n.prototype.addComment=function(e,t){var n=this.getImagePost(e);n.comments.unshift(new i(t.text,t.nickname,t.date)),n.showComments(e)},r.prototype.showComments=function(){var e=document.querySelector(".comments");return function(t){e.innerHTML="",this.comments.forEach(function(t){t.putOnPage(e)}),d.adjustSize(!0),document.querySelector(".popup-comments h2 span").textContent=this.comments.length,t&&this.node.querySelector(".sprite-comment").setAttribute("data-count",this.comments.length)}}(),i.prototype.putOnPage=function(e){function t(e,t){var n=document.createElement("SPAN");return n.className=e,n.textContent=t,n}var n=document.createElement("DIV");n.className="comment",n.appendChild(t("nickname",this.nickname)),n.appendChild(t("date",this.date));var r=document.createElement("DIV");r.className="comment-text",r.appendChild(t("",this.text)),n.appendChild(r),e.appendChild(n)},t.exports=n}()},{"./scrollbar.es6.js":3}],3:[function(e,t,n){!function(){t.exports=function(e,t){var n=this,r=e.parentNode,o=document.querySelector(r.getAttribute("data-scrolled-area")),i=o.parentNode,a="h"==t?["clientWidth","width","marginLeft","clientX","scrollLeft"]:["clientHeight","height","marginTop","clientY","scrollTop"],l=_slicedToArray(a,5),c=l[0],s=l[1],u=l[2],d=l[3],m=l[4],p=function(){var e=o[c],t=i[c];return e>t?t/e*100+"%":"100%"};this.adjustSize=function(t){var o=p();t&&n.jumpTo(0),"100%"==o?(r.style.opacity=0,i.removeEventListener("wheel",v)):(r.style.opacity=1,e.style[s]=o,i.addEventListener("wheel",v))};var v=function(e){console.log("wheel"),e.preventDefault()},f=function(){function t(){return l<=0}function r(){return p.scrollBarSize+l>=s}function o(){return t()?(e.style[u]=l=0,void(i[m]=0)):(r()&&(l=s-p.scrollBarSize),p.currentTarget.style[u]=l+"px",void(i[m]=l/s*p.scrollAreaSize))}var a=null,l=parseFloat(window.getComputedStyle(e)[u]),s=e.parentNode[c];n.jumpTo=function(t){l=t,e.style[u]=t,i[m]=t};var p=function e(t){var n=void 0,r=e.currentTarget;e.scrollBarSize;return s||(s=r.parentNode[c]),null===a?void(a=t[d]):(n=t[d]-a,a=t[d],l+=n,void o(l))},v=function(){window.removeEventListener("mousemove",p),a=null};return window.addEventListener("mouseup",v),window.addEventListener("blur",v),p}();e.addEventListener("mousedown",function(e){f.currentTarget=e.target,f.scrollBarSize=e.target[c],f.scrollAreaSize=o[c],window.addEventListener("mousemove",f)})}}()},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
